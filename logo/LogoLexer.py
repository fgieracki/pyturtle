# Generated from Logo.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,39,224,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,
        0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,
        5,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,
        8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,
        1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
        1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,3,21,162,8,21,1,21,
        1,21,3,21,166,8,21,1,22,4,22,169,8,22,11,22,12,22,170,1,23,1,23,
        1,23,4,23,176,8,23,11,23,12,23,177,1,24,4,24,181,8,24,11,24,12,24,
        182,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,
        1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,34,1,34,
        1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,38,4,38,219,8,38,11,38,
        12,38,220,1,38,1,38,0,0,39,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
        20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
        31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,1,0,3,1,0,48,
        57,2,0,65,90,97,122,3,0,9,10,13,13,32,32,229,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
        0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
        0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
        0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
        0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,
        0,0,75,1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,3,82,1,0,0,0,5,84,1,0,0,
        0,7,87,1,0,0,0,9,90,1,0,0,0,11,93,1,0,0,0,13,96,1,0,0,0,15,99,1,
        0,0,0,17,108,1,0,0,0,19,113,1,0,0,0,21,120,1,0,0,0,23,126,1,0,0,
        0,25,128,1,0,0,0,27,131,1,0,0,0,29,136,1,0,0,0,31,142,1,0,0,0,33,
        145,1,0,0,0,35,149,1,0,0,0,37,154,1,0,0,0,39,156,1,0,0,0,41,158,
        1,0,0,0,43,165,1,0,0,0,45,168,1,0,0,0,47,172,1,0,0,0,49,180,1,0,
        0,0,51,184,1,0,0,0,53,190,1,0,0,0,55,192,1,0,0,0,57,194,1,0,0,0,
        59,196,1,0,0,0,61,198,1,0,0,0,63,200,1,0,0,0,65,202,1,0,0,0,67,204,
        1,0,0,0,69,207,1,0,0,0,71,209,1,0,0,0,73,212,1,0,0,0,75,214,1,0,
        0,0,77,218,1,0,0,0,79,80,5,70,0,0,80,81,5,68,0,0,81,2,1,0,0,0,82,
        83,5,59,0,0,83,4,1,0,0,0,84,85,5,66,0,0,85,86,5,75,0,0,86,6,1,0,
        0,0,87,88,5,76,0,0,88,89,5,84,0,0,89,8,1,0,0,0,90,91,5,82,0,0,91,
        92,5,84,0,0,92,10,1,0,0,0,93,94,5,80,0,0,94,95,5,85,0,0,95,12,1,
        0,0,0,96,97,5,80,0,0,97,98,5,68,0,0,98,14,1,0,0,0,99,100,5,83,0,
        0,100,101,5,69,0,0,101,102,5,84,0,0,102,103,5,67,0,0,103,104,5,79,
        0,0,104,105,5,76,0,0,105,106,5,79,0,0,106,107,5,82,0,0,107,16,1,
        0,0,0,108,109,5,70,0,0,109,110,5,73,0,0,110,111,5,76,0,0,111,112,
        5,76,0,0,112,18,1,0,0,0,113,114,5,82,0,0,114,115,5,69,0,0,115,116,
        5,80,0,0,116,117,5,69,0,0,117,118,5,65,0,0,118,119,5,84,0,0,119,
        20,1,0,0,0,120,121,5,67,0,0,121,122,5,76,0,0,122,123,5,69,0,0,123,
        124,5,65,0,0,124,125,5,82,0,0,125,22,1,0,0,0,126,127,5,44,0,0,127,
        24,1,0,0,0,128,129,5,73,0,0,129,130,5,70,0,0,130,26,1,0,0,0,131,
        132,5,69,0,0,132,133,5,76,0,0,133,134,5,83,0,0,134,135,5,69,0,0,
        135,28,1,0,0,0,136,137,5,87,0,0,137,138,5,72,0,0,138,139,5,73,0,
        0,139,140,5,76,0,0,140,141,5,69,0,0,141,30,1,0,0,0,142,143,5,84,
        0,0,143,144,5,79,0,0,144,32,1,0,0,0,145,146,5,69,0,0,146,147,5,78,
        0,0,147,148,5,68,0,0,148,34,1,0,0,0,149,150,5,76,0,0,150,151,5,79,
        0,0,151,152,5,65,0,0,152,153,5,68,0,0,153,36,1,0,0,0,154,155,5,40,
        0,0,155,38,1,0,0,0,156,157,5,41,0,0,157,40,1,0,0,0,158,159,5,58,
        0,0,159,42,1,0,0,0,160,162,3,59,29,0,161,160,1,0,0,0,161,162,1,0,
        0,0,162,163,1,0,0,0,163,166,3,45,22,0,164,166,3,47,23,0,165,161,
        1,0,0,0,165,164,1,0,0,0,166,44,1,0,0,0,167,169,7,0,0,0,168,167,1,
        0,0,0,169,170,1,0,0,0,170,168,1,0,0,0,170,171,1,0,0,0,171,46,1,0,
        0,0,172,173,3,45,22,0,173,175,5,46,0,0,174,176,7,0,0,0,175,174,1,
        0,0,0,176,177,1,0,0,0,177,175,1,0,0,0,177,178,1,0,0,0,178,48,1,0,
        0,0,179,181,7,1,0,0,180,179,1,0,0,0,181,182,1,0,0,0,182,180,1,0,
        0,0,182,183,1,0,0,0,183,50,1,0,0,0,184,185,5,46,0,0,185,186,5,76,
        0,0,186,187,5,79,0,0,187,188,5,71,0,0,188,189,5,79,0,0,189,52,1,
        0,0,0,190,191,5,91,0,0,191,54,1,0,0,0,192,193,5,93,0,0,193,56,1,
        0,0,0,194,195,5,43,0,0,195,58,1,0,0,0,196,197,5,45,0,0,197,60,1,
        0,0,0,198,199,5,42,0,0,199,62,1,0,0,0,200,201,5,47,0,0,201,64,1,
        0,0,0,202,203,5,61,0,0,203,66,1,0,0,0,204,205,5,60,0,0,205,206,5,
        62,0,0,206,68,1,0,0,0,207,208,5,60,0,0,208,70,1,0,0,0,209,210,5,
        60,0,0,210,211,5,61,0,0,211,72,1,0,0,0,212,213,5,62,0,0,213,74,1,
        0,0,0,214,215,5,62,0,0,215,216,5,61,0,0,216,76,1,0,0,0,217,219,7,
        2,0,0,218,217,1,0,0,0,219,220,1,0,0,0,220,218,1,0,0,0,220,221,1,
        0,0,0,221,222,1,0,0,0,222,223,6,38,0,0,223,78,1,0,0,0,7,0,161,165,
        170,177,182,220,1,6,0,0
    ]

class LogoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    NUMBER = 22
    INT = 23
    FLOAT = 24
    ID = 25
    LOGO = 26
    LLIST = 27
    RLIST = 28
    PLUS = 29
    MINUS = 30
    MULT = 31
    DIV = 32
    EQ = 33
    NEQ = 34
    LT = 35
    LTE = 36
    GT = 37
    GTE = 38
    WS = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'FD'", "';'", "'BK'", "'LT'", "'RT'", "'PU'", "'PD'", "'SETCOLOR'", 
            "'FILL'", "'REPEAT'", "'CLEAR'", "','", "'IF'", "'ELSE'", "'WHILE'", 
            "'TO'", "'END'", "'LOAD'", "'('", "')'", "':'", "'.LOGO'", "'['", 
            "']'", "'+'", "'-'", "'*'", "'/'", "'='", "'<>'", "'<'", "'<='", 
            "'>'", "'>='" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "INT", "FLOAT", "ID", "LOGO", "LLIST", "RLIST", "PLUS", 
            "MINUS", "MULT", "DIV", "EQ", "NEQ", "LT", "LTE", "GT", "GTE", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "NUMBER", "INT", "FLOAT", "ID", "LOGO", "LLIST", 
                  "RLIST", "PLUS", "MINUS", "MULT", "DIV", "EQ", "NEQ", 
                  "LT", "LTE", "GT", "GTE", "WS" ]

    grammarFileName = "Logo.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


